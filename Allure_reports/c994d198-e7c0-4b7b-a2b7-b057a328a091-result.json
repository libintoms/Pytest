{"name": "Verify all cookies condition", "status": "failed", "statusDetails": {"message": "AssertionError", "trace": "self = <Test_GDPR_Verification.Test_main object at 0x04DDF058>\ntest_setup = None\n\n    @allure.title(\"Verify all cookies condition\")\n    def testcase_01(self, test_setup):\n        self.driver.get(\"https://lifesciences.cactusglobal.com/\")\n        title = self.driver.title\n        print(\"Page title: \"+title)\n        time.sleep(3)\n    \n        self.driver.find_element_by_xpath(\"//a[contains(text(),'here')]\").click()\n        self.driver.find_element_by_xpath(\"//a[contains(text(), 'Allow all')]\").click()\n        time.sleep(3)\n    \n        #Store cookies in dictionary\n        all_cookies=self.driver.get_cookies()\n        cookies_dict={}\n        for cookie in all_cookies:\n            cookies_dict[cookie['name']] = cookie['value']\n        print(cookies_dict)\n    \n        # fetch consent value\n        consent_value = str\n        if 'consent' in cookies_dict.keys():\n            consent_value = cookies_dict['consent']\n    \n    \n        # convert base64 to string\n        acptd_conditions = base64.b64decode(consent_value).decode('utf-8')\n        print(acptd_conditions)\n    \n        GA_code='_ga'\n        Bigint_code='__ivc'\n        if GA_code in cookies_dict.keys() and Bigint_code in cookies_dict.keys():\n            print(\"GA cookie accepted with name= \" + GA_code)\n            print(\"Bigint cookie accepted with name= \"+Bigint_code)\n        else:\n            print(\"Unable to fetch cookie details\")\n            raise AssertionError\n    \n    \n        for request in self.driver.requests:\n            # if request.response:\n                # print(\n                #     request.url,\n                #     request.response.status_code,\n                #     request.response.headers['Content-Type'],\n                #     request.response.headers['set-cookie']\n                # )\n            if \"https://www.googletagmanager.com/gtag/\" in request.url and request.response.status_code==200:\n                Gtag_url=request.url\n                id=Gtag_url.split('=')\n                print(\"Gtag js fired with id: \"+id[1])\n            else:\n                print(\"Google tag manager script not fired\")\n>               raise AssertionError\nE               AssertionError\n\nTest_GDPR_Verification.py:81: AssertionError"}, "attachments": [{"name": "stdout", "source": "a847ce53-e2ba-4db4-851f-49381feb4afc-attachment.txt", "type": "text/plain"}], "start": 1627230639503, "stop": 1627230667754, "uuid": "11cfce2c-1ff2-47e6-84a9-ddbd7fe28ba8", "historyId": "3896177e74ecd22a902893c9caf780b2", "testCaseId": "a077ca64d2a6d5dddf40f6d9aefb40c5", "fullName": "Test_GDPR_Verification.Test_main#testcase_01", "labels": [{"name": "suite", "value": "Test_GDPR_Verification"}, {"name": "subSuite", "value": "Test_main"}, {"name": "host", "value": "LIBINT1"}, {"name": "thread", "value": "22512-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "Test_GDPR_Verification"}]}